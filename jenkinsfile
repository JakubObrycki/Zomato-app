pipeline {
  agent any
  tools {
    nodejs 'node16'
  }
  environment {
    DOCKER_CREDENTIALS = credentials('jen-dockerhub')
    SCANNER_HOME = tool 'sonar-scanner'
    dockerTag='zomaimage'
    imageName='web'
  }

  stages {
    stage('Git checkout') {
      steps {
          checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jen-doc-token', url: 'https://github.com/JakubObrycki/Zomato-app.git']])
          sh "echo 'Succeeded'"
        }
      }
    stage('Sonarqube analysis') {
        steps {
          withSonarQubeEnv ('sonar-server') {
            sh '''${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectName=Zomato-app \
            -Dsonar.projectKey=Zomato-app'''
            sh "echo 'Succeeded'"
          }
        }
      }
    /*stage ('Quality gate') {
        steps {
          script {
            waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
            sh "echo 'Succeeded'"
          }
        }
      }*/
    stage ('Docker Build and Push') {
        steps {
          script {
            sh 'docker --version'
            sh 'docker build -t ${imageName} .'
            sh '''
            echo $DOCKER_CREDENTIALS_PSW | docker login -u $DOCKER_CREDENTIALS_USR --password-stdin
            docker tag $imageName $DOCKER_CREDENTIALS_USR/$imageName
            docker push $DOCKER_CREDENTIALS_USR/$imageName
            '''
            sh "echo 'Succeeded'"
          }
        }
      }
    stage ('Docker run container') {
        steps {
          script {
            sh 'docker run -d -p 3000:3000 ${imageName}/${dockerTag}'
          }
        }
      }  
    }
  }
